@inproceedings{loring_expose_2017,
    address = {New York, NY, USA},
    series = {{SPIN} 2017},
    title = {{ExpoSE}: practical symbolic execution of standalone {JavaScript}},
    isbn = {978-1-4503-5077-8},
    shorttitle = {{ExpoSE}},
    url = {https://doi.org/10.1145/3092282.3092295},
    doi = {10.1145/3092282.3092295},
    abstract = {JavaScript has evolved into a versatile ecosystem for not just the web, but also a wide range of server-side and client-side applications. With this increased scope, the potential impact of bugs increases. We introduce ExpoSE, a dynamic symbolic execution engine for Node.js applications. ExpoSE automatically generates test cases to find bugs and cover as many paths in the target program as possible. We discuss the specific challenges for symbolic execution arising from the widespread use of regular expressions in such applications. In particular, we make explicit the issues of capture groups, backreferences, and greediness in JavaScript's flavor of regular expressions, and our models improve over previous work that only partially addressed these. We evaluate ExpoSE on three popular JavaScript libraries that make heavy use of regular expressions, and we report a previously unknown bug in the Minimist library.},
    urldate = {2024-10-28},
    booktitle = {Proceedings of the 24th {ACM} {SIGSOFT} {International} {SPIN} {Symposium} on {Model} {Checking} of {Software}},
    publisher = {Association for Computing Machinery},
    author = {Loring, Blake and Mitchell, Duncan and Kinder, Johannes},
    month = jul,
    year = {2017},
    pages = {196--199},
}